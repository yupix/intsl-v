#!/usr/bin/env bash
if [[ -z "${input_server_name}" ]]; then
    echo "サーバー名を入力してください。"
    read -r -p ">" input_server_name
fi
echo $input_server_name
if [[ ! -e ${HOME_FILE_LOCATIONS}/intsl_v ]]; then
    mkdir ${HOME_FILE_LOCATIONS}/intsl_v
fi

if [[ -z ${INPUT_SERVER_DIRECTORY} ]]; then
    if [[ ${default_mode} = "true" ]]; then
        INPUT_SERVER_DIRECTORY=${INPUT_SERVER_DIRECTORY:-${HOME_FILE_LOCATIONS}intsl_v}
    else
        echo "サーバーのディレクトリーを指定してください"
        echo "default: ${HOME_FILE_LOCATIONS}intsl_v"
        read -r -p ">" INPUT_SERVER_DIRECTORY
        INPUT_SERVER_DIRECTORY=${INPUT_SERVER_DIRECTORY:-${HOME_FILE_LOCATIONS}intsl_v}
    fi
fi
#ファイルの確認
if [[ ! -e ${INPUT_SERVER_DIRECTORY} ]]; then
    mkdir -p ${INPUT_SERVER_DIRECTORY}
fi
mc_server_create_file_dir="$INPUT_SERVER_DIRECTORY"
check_input_server_name="1"
while [[ ${check_input_server_name} -gt "0" ]]; do
    # 変数内に/, #, !,-,',$,",(,),,,;,:があるか確認する
    check_input_server_name=$(echo $input_server_name | grep -E '/|\#|\"|\;|\)|\!|\(|\:|\,|\-|'\' | wc -c)

    if [ $check_input_server_name -gt 0 ]; then
        echo "$check_input_server_name に「/  #  \! - \' $ \" ( )  ; :」が含まれいます"
        echo "再度入力してください"
        read -r -p ">" input_server_name
    else
        echo -e "${ECHO_GREEN_BOLD_COLOR}文字のスペルチェックに成功${ECHO_COLOR_EXIT}"
    fi
done
backup_input_server_name="${input_server_name}"
purpose="get"
. ${VAR_LIB_FILE_LOCATIONS}server_list
if [[ ${covering_check} = "true" ]]; then
    echo "$(tput bold && tput setaf 3)==> WARNING:$(tput sgr0) 既にサーバーリストに登録されています)"
fi
input_server_name="${backup_input_server_name}"
if [[ -e "${mc_server_create_file_dir}/${input_server_name}" ]]; then
    echo -e "${ECHO_YELLOW_BOLD_COLOR}==> WARNING: 既にディレクトリが存在します${ECHO_COLOR_EXIT}"
    echo "使用可能な代替案:"
    for i in $(seq 1 7); do
        if [[ ! -e "${mc_server_create_file_dir}/${input_server_name}${i}" ]]; then
            echo -e "- ${ECHO_GREEN_BOLD_COLOR}${i}: ${input_server_name}${i} ✓使用可能 ${ECHO_COLOR_EXIT}"
        else
            echo -e "- ${ECHO_RED_BOLD_COLOR}${i}: ${input_server_name}${i} ✕使用不可${ECHO_COLOR_EXIT}"
            not_available_count=$((not_available_count + 1))
        fi
        if [[ ${not_available_count} = "7" ]]; then
            echo "全ての代替手段が使用できません"
        fi
    done
    echo "変更する場合は代替案の数字を、しない場合は、nを入力してください"
    while :; do
        read -r -p ">" input_alternate_name
        case $input_alternate_name in
        [1] | [2] | [3] | [4] | [5] | [6] | [7])
            if [[ ! -e "${mc_server_create_file_dir}/${input_server_name}${input_alternate_name}" ]]; then
                input_server_name="${input_server_name}${input_alternate_name}"
                break
            else
                echo "使用不可能なサーバー名です"
            fi
            ;;
        [nN] | [nN][oO])
            echo "${message_system_canceled}"
            exit 0
            ;;
        *)
            echo "代替案の数字、またはnを入力してください"
            ;;
        esac
    done
fi
echo -e "${ECHO_GREEN_BOLD_COLOR}==> Createfile${ECHO_COLOR_EXIT}"

echo -e "${ECHO_BLUE_BOLD_COLOR}  ->${ECHO_COLOR_EXIT} ${ECHO_WHITE_BOLD_COLOR}Running createfile hook: ${input_server_name}${ECHO_COLOR_EXIT}"
mkdir $mc_server_create_file_dir/${input_server_name}
if [[ -e $mc_server_create_file_dir/${input_server_name} ]]; then
    echo -e "${ECHO_GREEN_BOLD_COLOR}==> Createfile Successful${ECHO_COLOR_EXIT}"
else
    echo -e "${ECHO_RED_BOLD_COLOR}==> ERROR: file is not found${ECHO_COLOR_EXIT}"
    exit 1
fi
mc_donwload_version="$INPUT_SERVER_VERSION"
if [ ${mc_server_edition} = "official" ] || [ ${mc_server_edition} = "spigot" ] || [ ${mc_server_edition} = "paper" ]; then
    srce_edision="server"
    cp ${mc_server_jar_file}${mc_server_edition}${mc_donwload_version}.jar ${mc_server_create_file_dir}/${input_server_name}
elif [[ $mc_server_edition = forge ]];then
    cp -r ${mc_server_jar_file}* ${mc_server_create_file_dir}/${input_server_name}
    get_forge_file_name=$(find ${mc_server_jar_file}* -maxdepth 1 -name "*.jar" | grep "forge-${minecraft_version}" | awk -F/ '{print $NF}')
    echo $get_forge_file_name
fi

. ${SETTING_FILE_LOCATIONS}settings
sed -i ''${server_add_line}'i'"\#${input_server_name}START"'' ${VAR_LIB_FILE_LOCATIONS}server_list
NEWSERVERLANE=$((server_add_line + 1))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

. ${SETTING_FILE_LOCATIONS}settings
# サーバー数を増やす
new_number_of_server=$((number_of_server + 1))
sed -i -e 's/number_of_server="'$number_of_server'/number_of_server="'$new_number_of_server'/' ${SETTING_FILE_LOCATIONS}settings
. ${SETTING_FILE_LOCATIONS}settings

sed -i ''${server_add_line}'i'${input_server_name}\|${number_of_server}\)'' ${VAR_LIB_FILE_LOCATIONS}server_list
sed -i ''${server_add_line}'a ;;' ${VAR_LIB_FILE_LOCATIONS}server_list
sed -i ''${server_add_line}'a mc_settings_file_locations="'${mc_server_create_file_dir}/${input_server_name}'"''' ${VAR_LIB_FILE_LOCATIONS}server_list
sed -i ''${server_add_line}'a mc_server_id="'${number_of_server}'"''' ${VAR_LIB_FILE_LOCATIONS}server_list

NEWSERVERLANE=$((server_add_line + 4))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

. ${SETTING_FILE_LOCATIONS}settings

sed -i ''$server_add_line'i'"\#${input_server_name}EXIT"'' ${VAR_LIB_FILE_LOCATIONS}server_list
NEWSERVERLANE=$((server_add_line + 1))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

spinner_progress_status="ファイルの確認中 1/2"
run_spinner
if [[ -e $mc_server_create_file_dir/${input_server_name} ]]; then
    echo "サーバーファイルの作成に成功しました。"
    if [ -z "$SET_MAX_MEMORY" ]; then
        SET_MAX_MEMORY=${SET_MAX_MEMORY:-1G}
    fi
    if [ -z "$SET_MIN_MEMORY" ]; then
        SET_MIN_MEMORY=${SET_MIN_MEMORY:-1G}
    fi
    . ${LIB_FILE_LOCATIONS}server_default_settings.sh
    spinner_progress_status="ファイルの確認中 2/2"
    run_spinner
    if [[ ! -e $mc_server_create_file_dir/${input_server_name}/setting.txt ]]; then
        echo "設定ファイルの生成に失敗しました"
    fi
else
    echo "サーバーファイルの作成に失敗しました"
    exit 1
fi
exit 0
